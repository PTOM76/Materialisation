plugins {
    id "fabric-loom" version "0.10-SNAPSHOT"
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

group = project.maven_group
version = project.mod_version
archivesBaseName = project.archives_base_name

repositories {
    maven { url 'https://raw.githubusercontent.com/Devan-Kerman/Devan-Repo/master/' }
    maven { url 'https://jitpack.io' }
    maven { url "https://maven.shedaniel.me/" }
    maven { url "https://maven.terraformersmc.com/releases" }
    mavenLocal()
}

loom {
    accessWidenerPath = file("src/main/resources/materialisation.accesswidener")
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    include("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config}")
    compileOnly("com.google.code.findbugs:jsr305:3.0.2") { transitive = false }
    modImplementation("com.terraformersmc:modmenu:${project.modmenu}")
    modImplementation("me.shedaniel:RoughlyEnoughItems-fabric:${project.rei}")
    modImplementation group: 'net.devtech', name: 'arrp', version: '0.2.6'
    include group: 'net.devtech', name: 'arrp', version: '0.2.6'
}

processResources {
    inputs.property "version", project.version
    inputs.property "name", project.display_name
    filesMatching('fabric.mod.json') {
        expand 'version': project.version
        expand 'name': project.display_name
    }
}


processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"

    def targetVersion = 16
    if (JavaVersion.current().isJava9Compatible()) {
        it.options.release = targetVersion
    }
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    repositories {

    }
}